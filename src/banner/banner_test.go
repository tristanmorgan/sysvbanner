package banner_test

import (
	. "banner"
	"testing"
)

type bufferWriter struct {
	buf []string
}

func (writer *bufferWriter) Write(p []byte) (int, error) {
	writer.buf = append(writer.buf, string(p))
	return 0, nil
}

var expected = []string{
	"   #    ######   #####  ######  ####### #######  #####  #     #   ###         # ", "#    #  #       #     # #     # ####### ######   #####  ######   #####  ####### ", "#     # #     # #     # #     # #     # #######                                 ", "                                                                                ", "                                                                                ", "                ", "\n",
	"  # #   #     # #     # #     # #       #       #     # #     #    #          # ", "#   #   #       ##   ## ##    # #     # #     # #     # #     # #     #    #    ", "#     # #     # #  #  #  #   #   #   #       #     ##    #####    ####   #####  ", " ######  ######   ####   #    #     #         #  #    #  #       #    #  #    # ", "  ####   #####    ####   #####    ####    #####  #    #  #    #  #    #  #    # ", "  #   #  ###### ", "\n",
	" #   #  #     # #       #     # #       #       #       #     #    #          # ", "#  #    #       # # # # # #   # #     # #     # #     # #     # #          #    ", "#     # #     # #  #  #   # #     # #       #     #  #   #    #  #    #  #    # ", " #       #       #    #  #    #     #         #  #   #   #       ##  ##  ##   # ", " #    #  #    #  #    #  #    #  #          #    #    #  #    #  #    #   #  #  ", "   # #       #  ", "\n",
	"#     # ######  #       #     # #####   #####   #  #### #######    #          # ", "###     #       #  #  # #  #  # #     # ######  #     # ######   #####     #    ", "#     # #     # #  #  #    #       #       #     #    #  #####   #       #    # ", " #####   #####   #       ######     #         #  ####    #       # ## #  # #  # ", " #    #  #    #  #    #  #    #   ####      #    #    #  #    #  #    #    ##   ", "    #       #   ", "\n",
	"####### #     # #       #     # #       #       #     # #     #    #    #     # ", "#  #    #       #     # #   # # #     # #       #   # # #   #         #    #    ", "#     #  #   #  #  #  #   # #      #      #      ######  #    #  #       #    # ", " #       #       #  ###  #    #     #         #  #  #    #       #    #  #  # # ", " #    #  #####   #  # #  #####        #     #    #    #  #    #  # ## #    ##   ", "    #      #    ", "\n",
	"#     # #     # #     # #     # #       #       #     # #     #    #    #     # ", "#   #   #       #     # #    ## #     # #       #    #  #    #  #     #    #    ", "#     #   # #   #  #  #  #   #     #     #       #    #  #    #  #    #  #    # ", " #       #       #    #  #    #     #    #    #  #   #   #       #    #  #   ## ", " #    #  #       #   #   #   #   #    #     #    #    #   #  #   ##  ##   #  #  ", "    #     #     ", "\n",
	"#     # ######   #####  ######  ####### #        #####  #     #   ###    #####  ", "#    #  ####### #     # #     # ####### #        #### # #     #  #####     #    ", " #####     #     ## ##  #     #    #    #######  #    #  #####    ####   #####  ", " ######  #        ####   #    #     #     ####   #    #  ######  #    #  #    # ", "  ####   #        ### #  #    #   ####      #     ####     ##    #    #  #    # ", "    #    ###### ", "\n",
	"\n",
}

func TestBanner(t *testing.T) {
	str := "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
	writer := &bufferWriter{}

	Banner(str, writer)

	for i, actual := range writer.buf {
		if expected[i] != actual {
			t.Errorf("expected: %v\ngot: %v\n", expected[i], actual)
		}
	}
}
